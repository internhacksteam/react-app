{"ast":null,"code":"var _jsxFileName = \"/Users/niveda/Documents/GitHub/react-app/src/views/IndexSections/LevelDisplay.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\"; // reactstrap components\n\nimport { Card, CardBody, NavItem, NavLink, Nav, TabContent, TabPane, Col } from \"reactstrap\";\nimport axios from 'axios';\n\nclass LevelDisplay extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      circledNavPills: 3,\n      levels: []\n    };\n\n    this.toggleNavs = (e, state, index) => {\n      e.preventDefault();\n      this.setState({\n        [state]: index\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://127.0.0.1:5000/api/displayLevels\").then(res => {\n      var levels = res.data;\n      this.setState({\n        levels\n      });\n      console.log(\"levels\", levels);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav-pills-circle\",\n      id: \"tabs_2\",\n      pills: true,\n      role: \"tablist\",\n      to: \"/questionstart-page\",\n      tag: Link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 1,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 1\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 1),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, \"print()\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 2,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 2\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 2),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"variables\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 3,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 3\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 3),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, \"variables 2\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 4,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 4\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 4),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, \"conditionals\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 5,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 5\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 5),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, \"conditionals 2\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      \"aria-selected\": this.state.circledNavPills === 6,\n      className: classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 6\n      }),\n      onClick: e => this.toggleNavs(e, \"circledNavPills\", 6),\n      href: \"#pablo\",\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link-icon d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, \"loops\"))))));\n  }\n\n}\n\nexport default LevelDisplay;","map":{"version":3,"sources":["/Users/niveda/Documents/GitHub/react-app/src/views/IndexSections/LevelDisplay.js"],"names":["React","classnames","Link","Card","CardBody","NavItem","NavLink","Nav","TabContent","TabPane","Col","axios","LevelDisplay","Component","state","circledNavPills","levels","toggleNavs","e","index","preventDefault","setState","componentWillUnmount","callback","componentDidMount","get","then","res","data","console","log","render","active"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n\nimport { Link } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  TabContent,\n  TabPane,\n  Col,\n} from \"reactstrap\";\n\nimport axios from 'axios';\n\nclass LevelDisplay extends React.Component {\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state,callback)=>{\n    \n      return ;\n    };\n  }\n  state = {\n        circledNavPills: 3,\n        levels:[]\n      };\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:5000/api/displayLevels`)\n    .then(res => {\n      var levels = res.data;\n      this.setState({ levels });\n      console.log(\"levels\",levels);\n    })\n  }\n  toggleNavs = (e, state, index) => {\n    e.preventDefault();\n    this.setState({\n      [state]: index\n    });\n  };\n  render() {\n    return (\n      <>\n      <Nav className=\"nav-pills-circle\" id=\"tabs_2\" pills role=\"tablist\" \n      to=\"/questionstart-page\" tag={Link}>\n      <Col lg= \"2\">\n      <NavItem >\n      <NavLink \n      aria-selected={this.state.circledNavPills === 1}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 1\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 1)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      print()\n\n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n      <Col lg= \"2\">\n      <NavItem>\n      <NavLink\n      aria-selected={this.state.circledNavPills === 2}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 2\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 2)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      variables                   \n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n      <Col lg= \"2\">\n      <NavItem>\n      <NavLink\n      aria-selected={this.state.circledNavPills === 3}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 3\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 3)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      variables 2                    \n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n      <Col lg= \"2\">\n      <NavItem>\n      <NavLink\n      aria-selected={this.state.circledNavPills === 4}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 4\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 4)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      conditionals                     \n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n      <Col lg= \"2\">\n      <NavItem>\n      <NavLink\n      aria-selected={this.state.circledNavPills === 5}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 5\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 5)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      conditionals 2                   \n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n      <Col lg= \"2\">\n      <NavItem>\n      <NavLink\n      aria-selected={this.state.circledNavPills === 6}\n      className={classnames(\"rounded-circle\", {\n        active: this.state.circledNavPills === 6\n      })}\n      onClick={e => this.toggleNavs(e, \"circledNavPills\", 6)}\n      href=\"#pablo\"\n      role=\"tab\"\n      >\n      <span className=\"nav-link-icon d-block\">\n      loops                 \n      </span>\n\n      </NavLink>\n      </NavItem>\n      </Col>\n\n      </Nav>\n      </>\n      );\n  }\n}\n\nexport default LevelDisplay;"]},"metadata":{},"sourceType":"module"}